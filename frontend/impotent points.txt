//cd frontend
//npm create vite@latest ./
//npm install -D tailwindcss postcss autoprefixer
>> npx tailwindcss init -p
//npm i
//npm i -D daisyui@latest

// index.css-->

we remove all codes and pest it -

@tailwind base;
@tailwind components;
@tailwind utilities;

///////////////////////////////////////////////////

// in tailwind.config.js -->

we remove all code and add this 
/** @type {import('tailwindcss').Config} */
export default {
  content: ["./index.html", "./src/**/*.{js,ts,jsx,tsx}"],
  darkMode: "class",
  theme: {
      extend: {},
  },
  plugins: [require("daisyui")],
};
//////////////////////////////////////////////////////////////////////

npm install react-hook-form


import { useForm, SubmitHandler } from "react-hook-form"


type Inputs = {
  example: string
  exampleRequired: string
}


export default function App() {
  const {
    register,
    handleSubmit,
    watch,
    formState: { errors },
  } = useForm<Inputs>()
  const onSubmit: SubmitHandler<Inputs> = (data) => console.log(data)


  console.log(watch("example")) // watch input value by passing the name of it


  return (
    /* "handleSubmit" will validate your inputs before invoking "onSubmit" */
    <form onSubmit={handleSubmit(onSubmit)}>
      {/* register your input into the hook by invoking the "register" function */}
      <input defaultValue="test" {...register("example")} />


      {/* include validation with required or other standard HTML validation rules */}
      <input {...register("exampleRequired", { required: true })} />
      {/* errors will return when field validation fails  */}
      {errors.exampleRequired && <span>This field is required</span>}


      <input type="submit" />
    </form>
  )
}

set in login components and singn up comonents
////////////////////////////////////////////////////////////////////////////////////////